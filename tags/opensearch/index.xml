<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Opensearch on Sanchit's blog</title><link>https://sanchitdilipjain.github.io/tags/opensearch/</link><description>Recent content in Opensearch on Sanchit's blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sun, 07 Jul 2024 19:59:21 +0000</lastBuildDate><atom:link href="https://sanchitdilipjain.github.io/tags/opensearch/index.xml" rel="self" type="application/rss+xml"/><item><title>Tips &amp; Tricks for Optimizing Amazon OpenSearch: Performance and Cost Efficiency üîç</title><link>https://sanchitdilipjain.github.io/post/amazon-opensearch-best-practice/</link><pubDate>Wed, 12 Jun 2024 12:00:00 +0000</pubDate><guid>https://sanchitdilipjain.github.io/post/amazon-opensearch-best-practice/</guid><description>Tips &amp;amp; Tricks for Optimizing Amazon OpenSearch: Performance and Cost Efficiency Amazon OpenSearch Service (formerly Amazon Elasticsearch Service) is a powerful tool for search, log analytics, and real-time application monitoring. However, as with any cloud service, improper management can lead to performance issues and unexpected costs. Here, we&amp;rsquo;ll explore best practices to get the most out of OpenSearch while keeping your costs under control.
Rightsizing Your Infrastructure
Instance Selection: Use the latest generation instance types.</description></item></channel></rss>